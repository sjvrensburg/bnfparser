% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bnfparser.R
\name{parseBNFString}
\alias{parseBNFString}
\title{Parse a BNF Grammar String}
\usage{
parseBNFString(
  grammar_string,
  strict_mode = FALSE,
  preserve_whitespace = TRUE,
  allow_empty_rules = FALSE,
  detect_left_recursion = TRUE,
  allow_ebnf = TRUE,
  validate_references = TRUE
)
}
\arguments{
\item{grammar_string}{Character string containing the BNF grammar}

\item{strict_mode}{Logical; if TRUE, requires all terminals to be quoted}

\item{preserve_whitespace}{Logical; if TRUE, preserves whitespace in rules}

\item{allow_empty_rules}{Logical; if TRUE, allows empty rule alternatives}

\item{detect_left_recursion}{Logical; if TRUE, detects and reports left recursion}

\item{allow_ebnf}{Logical; if TRUE, allows EBNF constructs}

\item{validate_references}{Logical; if TRUE, validates all rule references}
}
\value{
A list of class "bnf_grammar" containing the parsed grammar rules
}
\description{
Parses a BNF (Backus-Naur Form) grammar provided as a string and returns
a structured representation.
}
\examples{
grammar_text <- "
<expr> ::= <term> | <expr> <op> <term>
<term> ::= <var> | <coef> * <var> | <coef>
<op> ::= + | -
<var> ::= x | x * x
<coef> ::= 1.0 | 2.0 | 3.0 | 0.5 | -1.0
"
result <- parseBNFString(grammar_text)
}
